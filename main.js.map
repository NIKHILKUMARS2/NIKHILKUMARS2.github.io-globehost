{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/countries/countries.component.css","webpack:///./src/app/countries/countries.component.html","webpack:///./src/app/countries/countries.component.ts","webpack:///./src/app/country/country.component.css","webpack:///./src/app/country/country.component.html","webpack:///./src/app/country/country.component.ts","webpack:///./src/app/globe.service.ts","webpack:///./src/app/region/region.component.css","webpack:///./src/app/region/region.component.html","webpack:///./src/app/region/region.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".container{\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n\\r\\nh1{\\r\\n    text-align: center;\\r\\n    \\r\\n}\\r\\n\\r\\n\\r\\n.btn,.dropdown-menu{\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"page-header\\\">\\n      <h1>Globe/World</h1>\\n    </div>\\n    <div class=\\\"dropdown\\\">\\n      <button class=\\\"btn btn-primary dropdown-toggle  \\\" type=\\\"button\\\" data-toggle=\\\"dropdown\\\">Menu\\n      <span class=\\\"caret\\\"></span></button>\\n      <ul class=\\\"dropdown-menu\\\">\\n        <li><a [routerLink]=\\\"['/region']\\\">REGIONS</a></li>  \\n      </ul>\\n    </div>\\n    \\n    </div>\\n<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'globe';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { RegionComponent } from './region/region.component';\nimport { CountriesComponent } from './countries/countries.component';\nimport { CountryComponent } from './country/country.component';\n\nimport{GlobeService} from './globe.service';\n\nimport {RouterModule,Routes} from '@angular/router';\n\nimport { HttpClientModule } from '@angular/common/http';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RegionComponent,\n    CountriesComponent,\n    CountryComponent,\n    \n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    RouterModule.forRoot([\n      { path:'region',component:RegionComponent },\n      {path:'',redirectTo:'region',pathMatch:'full'},\n      { path:'countries/:region',component:CountriesComponent },\n      { path:'country/:country',component:CountryComponent },\n    \n      { path: 'countries/currency/:currencycode',pathMatch: 'full', component: CountriesComponent },\n      { path: 'countries/language/:languagecode',pathMatch: 'full', component: CountriesComponent }\n    ])\n  ],\n  providers: [GlobeService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".card{\\r\\n    height:66vh;\\r\\n    border: solid;\\r\\n    margin-bottom:1em;\\r\\n    \\r\\n}\\r\\n\\r\\n.row{\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.card-img{\\r\\n    width:100%;\\r\\n    height:40%;\\r\\n}\\r\\n\\r\\n.card:hover{\\r\\n    background-color: rgb(235, 134, 134);\\r\\n}\"","module.exports = \"<div  style=\\\"text-align:center;color:olivedrab\\\">\\n    <div class=\\\"col-md-12 title1\\\" style=\\\"font-size: 2em\\\">COUNTRIES\\n        <button class=\\\"btn btn-secondary\\\" (click)=\\\"goBackToPreviousPage()\\\" >Back </button>\\n    </div>   \\n  </div>\\n  <div  style=text-align:center *ngIf=\\\"currencyfilter==1\\\">\\n      <div class=\\\"col-md-12 title1\\\" style=\\\"font-size: 22px\\\">Countries filterd based on Currency</div>\\n    </div>\\n    <div  style=text-align:center *ngIf=\\\"languagefilter==1\\\">\\n        <div class=\\\"col-md-12 title1\\\" style=\\\"font-size: 22px\\\">Countries filterd based on Language</div>\\n      </div>\\n<div class=\\\"container\\\">\\n    <div class=\\\"row\\\" *ngIf=\\\"flag==1\\\">\\n        <div *ngFor =\\\"let country of countries\\\" class=\\\"col-12 col-md-6 col-lg-4 \\\" >\\n            <div class=\\\"card\\\">                        \\n                <img class=\\\"card-img\\\"  src= {{country.flag}}><br>\\n                <h5 class=\\\"card-title\\\" >{{country.name|uppercase}} </h5>  \\n                <div class=\\\"card-body\\\" >\\n                    <p >Capital:{{country.capital}}</p>                        \\n                    <p >Timezone: {{country.timezones[0]}}</p>    \\n                    <p >Subregion: {{country.subregion}}</p>  \\n                    <p >Population: {{country.population}}</p> \\n                    Currency:\\n                   <a [routerLink] =  \\\"['/countries/currency',currency.code]\\\" *ngFor='let currency of country.currencies;'> {{currency.name}}</a><br>\\n                   Language:\\n                   <a [routerLink] =  \\\"['/countries/language',language.iso639_1]\\\" *ngFor='let language of country.languages;'>{{language.name}}</a>\\n                   <br><a [routerLink]=\\\"['/country',country.name]\\\">Know about {{country.name}}</a>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router'\nimport { GlobeService } from '../globe.service';\nimport { CommonModule, getCurrencySymbol } from '@angular/common';\nimport { Goback } from './countriesInterface';\nimport{Location} from '@angular/common';\n@Component({\n  selector: 'app-countries',\n  templateUrl: './countries.component.html',\n  styleUrls: ['./countries.component.css']\n})\nexport class CountriesComponent implements OnInit,Goback {\npublic countries;\npublic flag=0;\npublic currencyfilter=0;\npublic languagefilter=0;\n  constructor(private _route: ActivatedRoute, private router: Router,private globeservice:GlobeService,public location:Location) { \n   \n  }\n\n  ngOnInit() {\n    \n  let region = this._route.snapshot.paramMap.get('region');\n  \n  let currencycode = this._route.snapshot.paramMap.get('currencycode');\n\n  let languagecode = this._route.snapshot.paramMap.get('languagecode');\n\n\n//Differentiating different types of call to countries component for example call for countries,currency filtered countries,language filtered countries\nif(currencycode==null && languagecode==null && region!=null){\n\n  this.countries = this.globeservice.getAllCountries(region)\n  \n  .subscribe(\n    data => {\n      \n      this.countries = data;\n      this.flag=1;\n      console.log(this.countries);\n      \n    },\n    error => {\n      console.log(\"some error occured\");\n      console.log(error.errorMessage);\n\n    }) \n  }\n  else if(currencycode!=null && languagecode==null && region==null){\n    this.currencyfilter=1;\n    this._route.params.subscribe(param => {\n      let currencycode = this._route.snapshot.paramMap.get('currencycode');\n      console.log(\"vmkmv\");\n      console.log(currencycode);\n      this.countries = this.globeservice.getCurrencycountries(currencycode)\n  \n      .subscribe(\n        data => {\n          \n          this.countries = data;\n          this.flag=1;\n          console.log(this.countries);\n          \n        },\n        error => {\n          console.log(\"some error occured\");\n          console.log(error.errorMessage);\n    \n        }) \n    })\n  \n  }\n  else {\n    this.languagefilter=1;\n    this._route.params.subscribe(param => {\n      let languagecode = this._route.snapshot.paramMap.get('languagecode');\n      console.log(\"vmkmv\");\n      console.log(languagecode);\n      \n      this.countries = this.globeservice.getLanguagecountries(languagecode)\n  \n      .subscribe(\n        data => {\n          \n          this.countries = data;\n          this.flag=1;\n          console.log(this.countries);\n          \n        },\n        error => {\n          console.log(\"some error occured\");\n          console.log(error.errorMessage);\n    \n        }) \n    })\n  \n  }\n\n\n  }\n\n//function for goback button\n  goBackToPreviousPage():any\n  {\n    this.location.back();\n  }\n\n}\n","module.exports = \".card{\\r\\n    height:66vh;\\r\\n    border: solid;\\r\\n    margin-bottom:1em;\\r\\n    \\r\\n}\\r\\n\\r\\n.row{\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.card-img{\\r\\n    width:100%;\\r\\n    height:40%;\\r\\n    \\r\\n}\\r\\n\\r\\n.card:hover{\\r\\nbackground-color: rgb(235, 134, 134);\\r\\n}\"","module.exports = \"<div  style=\\\"text-align:center;color:olivedrab\\\">\\n    <div class=\\\"col-md-12 title1\\\" style=\\\"font-size: 2em\\\">COUNTRY\\n        <button class=\\\"btn btn-secondary\\\" (click)=\\\"goBackToPreviousPage()\\\" >Back </button>\\n    </div>   \\n  </div>\\n\\n<div class=\\\"container\\\">\\n    <div class=\\\"row\\\" *ngIf=\\\"flag==1\\\">\\n        <div *ngFor =\\\"let count of country\\\" class=\\\"col-12 col-md-6 col-lg-6 \\\" >\\n            <div class=\\\"card \\\"  >                        \\n                <img class=\\\"card-img\\\"  src= {{count.flag}}><br>          \\n                <h5 class=\\\"card-title\\\" >{{count.name|uppercase}} </h5>  \\n                <div class=\\\"card-body\\\" >\\n                    <p> Native Name: {{count.nativeName}}</p>\\n                    <p>Capital:  {{count.capital}}</p>\\n                    <p>Region: {{count.region}}</p>\\n                    <div > Currency:\\n                        <a   [routerLink] =   \\\"['/countries/currency',currency.code]\\\" *ngFor='let currency of count.currencies;'> {{currency.name}}</a><br></div>\\n                   <div >  Language:\\n                        <a   [routerLink] =  \\\"['/countries/language',language.iso639_1]\\\"  *ngFor='let language of count.languages;'>{{language.name}}</a></div>\\n                        <p>Population:{{count.population}}</p>\\n                        <p>Area:{{count.area}}</p>\\n                        <p>Sub-region: {{count.subregion}}</p>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router'\nimport { GlobeService } from '../globe.service';\nimport { CommonModule } from '@angular/common';\nimport{Location} from '@angular/common';\nimport { Goback } from './countryInterface';\n@Component({\n  selector: 'app-country',\n  templateUrl: './country.component.html',\n  styleUrls: ['./country.component.css']\n})\nexport class CountryComponent implements OnInit,Goback {\n  public country;\n  public flag=0;\n  constructor(private _route: ActivatedRoute, private router: Router, private globeservice:GlobeService,public location:Location) { }\n\n  ngOnInit() {\n    let countryname = this._route.snapshot.paramMap.get('country');\n    console.log(countryname);\n// calling function to get country\n    this.globeservice.getSingleCountry(countryname).subscribe(\n      data => {\n        console.log(data);\n        this.country = data;\n        this.flag=1;\n      },\n      error => {\n        console.log(\"some error occured\");\n        console.log(error.errorMessage);\n\n      })\n  }\n  goBackToPreviousPage():any\n  {\n    this.location.back();\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport {HttpClient,HttpErrorResponse} from '@angular/common/http';\nimport {Observable,Subject,throwError} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GlobeService {\n\n  public baseurl ='https://restcountries.eu/rest/v2';\n  \n  constructor(private _http:HttpClient) { }\n\n//function get countries in particular region\n  public getAllCountries(region):any{\n    let countries = this._http.get(this.baseurl+`/region/${region}`);\n    console.log(countries);\n    return countries;\n  }\n//function getAllCountries(region) ends\n\n//function to get  single country\n  public getSingleCountry(countryname):any{\n    let country = this._http.get(this.baseurl+`/name/${countryname}`);\n    console.log(country);\n    return country;\n  }\n//function getSingleCountry(countryname) ends \n\n//function get currency filtered countries \n  public getCurrencycountries(currencycode) :any{\n      let currency = this._http.get(this.baseurl + `/currency/${currencycode}`);\n      console.log(currency);\n      return currency;\n    }\n//function getCurrencycountries(currencycode) ends\n\n//function get language filtered countries\n    public getLanguagecountries(languagecode) :any{\n      let currency = this._http.get(this.baseurl + `/lang/${languagecode}`);\n      console.log(currency);\n      return currency;\n    } \n //function getLanguagecountries(languagecode) ends   \n    \n}\n","module.exports = \"\\r\\n\\r\\n\\r\\n.card-deck{\\r\\n    border:solid;\\r\\n    height: 30%;\\r\\n    align-content: center;\\r\\n    margin: 0;\\r\\n\\r\\n\\r\\n}\\r\\n\\r\\n\\r\\n.card-deck:hover{\\r\\n\\r\\n    background-color: rgb(235, 134, 134);\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<div class=\\\"container\\\" style=\\\"text-align:center\\\">\\n  <div class=\\\"row\\\" style=text-align:center>\\n    <div class=\\\"col-md-12 title1\\\" style=\\\"font-size: 22px\\\">Regions</div>\\n  </div>\\n  <br>\\n  <br>\\n\\n  <div class=\\\"row\\\" style=\\\"text-align: center;\\\">\\n    <div class=\\\"col-md-4\\\">\\n      <div class=\\\"card-deck\\\">\\n        <div class=\\\"card\\\" style=\\\"width: 100%\\\">\\n          <h5 class=\\\"card-title\\\" style=\\\"font-size: 20px;font-style:initial\\\"> AFRICA</h5>\\n\\n          <div>\\n            <img src=\\\"assets/Map-Africa-Regions.png\\\" class=\\\"img-fluid\\\" alt=\\\"Responsive image\\\" style=\\\"height: 20%;\\\">\\n          </div>\\n          <div class=\\\"card-body\\\">\\n            <p>The continent of Africa is commonly divided into five regions or subregions, four of which are in Sub-Saharan\\n              Africa, though some definitions may contain four (removing Central Africa) or six regions .</p>\\n            <a [routerLink]=\\\"['/countries','Africa']\\\">Know about Africa</a>\\n          </div>\\n\\n        </div>\\n\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-4\\\">\\n      <div class=\\\"card-deck\\\">\\n        <div class=\\\"card\\\" style=\\\"width: 100%;height:65vh;\\\">\\n\\n          <h5 class=\\\"card-title\\\" style=\\\"font-size: 20px;font-style:initial\\\">AMERICA </h5>\\n          <div>\\n            <img src=\\\"assets/American-regions-map.jpg\\\" class=\\\"img-fluid\\\" alt=\\\"Responsive image\\\" style=\\\"height: 20%;\\\">\\n          </div>\\n          <div class=\\\"card-body\\\">\\n            <p>The Americas, also known as America,[1] are lands of the western hemisphere, composed of numerous entities and\\n              regions variably defined by geography, politics, and culture.The Americas are recognised in the English-speaking\\n              world to comprise two separate continents: North America and South America.</p>\\n            <a [routerLink]=\\\"['/countries','Americas']\\\">Know about Americas</a>\\n          </div>\\n\\n        </div>\\n\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-4\\\">\\n      <div class=\\\"card-deck\\\">\\n        <div class=\\\"card\\\" style=\\\"width: 100%;\\\">\\n          <h5 class=\\\"card-title\\\" style=\\\"font-size: 20px;font-style:initial\\\"> OCEANIA</h5>\\n\\n          <div>\\n            <img src=\\\"assets/oceania.jpg\\\" class=\\\"img-fluid\\\" alt=\\\"Responsive image\\\" style=\\\"height: 20%;\\\">\\n          </div>\\n          <div class=\\\"card-body\\\">\\n            <p>The Oceania is a geographic region comprising Melanesia, Micronesia, Polynesia and Australasia.[4] Spanning the\\n              eastern and western hemispheres, Oceania covers an area of 8,525,989 square kilometres (3,291,903 sq mi) and\\n              has a population of 40 million. Situated in the southeast of the Asia-Pacific region, Oceania is the smallest\\n              continental grouping in land area and the second smallest in population after Antarctica.</p>\\n            <a [routerLink]=\\\"['/countries','Oceania']\\\">Know about Oceania</a>\\n          </div>\\n\\n        </div>\\n\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-4\\\">\\n      <div class=\\\"card-deck\\\">\\n        <div class=\\\"card\\\" style=\\\"width: 100%;\\\">\\n          <h5 class=\\\"card-title\\\" style=\\\"font-size: 20px;font-style:initial\\\">EUROPE </h5>\\n\\n          <div>\\n            <img src=\\\"assets/political-map-of-europe.jpg\\\" class=\\\"img-fluid\\\" alt=\\\"Responsive image\\\" style=\\\"height: 20%;\\\">\\n          </div>\\n          <div class=\\\"card-body\\\">\\n            <p>Europe is often divided into regions based on geographical, cultural or historical criteria. Many European structures\\n              currently exist, some are cultural, economic, or political - examples include the Council of Europe, the European\\n              Broadcasting Union with the Eurovision Song Contest, and the European Olympic Committees with the European\\n              Games. </p>\\n            <a [routerLink]=\\\"['/countries','Europe']\\\">Know about Europe</a>\\n          </div>\\n\\n        </div>\\n\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-4\\\">\\n      <div class=\\\"card-deck\\\">\\n        <div class=\\\"card\\\" style=\\\"width: 100%;\\\">\\n          <h5 class=\\\"card-title\\\" style=\\\"font-size: 20px;font-style:initial\\\">ASIA </h5>\\n\\n          <div>\\n            <img src=\\\"assets/500px-Map_of_Asia.png\\\" class=\\\"img-fluid\\\" alt=\\\"Responsive image\\\" style=\\\"height: 20%;\\\">\\n          </div>\\n          <div class=\\\"card-body\\\">\\n            <p>The Asia is Earth's largest and most populous continent, located primarily in the Eastern and Northern Hemispheres.\\n              It shares the continental landmass of Eurasia with the continent of Europe and the continental landmass of\\n              Afro-Eurasia with both Europe and Africa.</p>\\n            <a [routerLink]=\\\"['/countries','Asia']\\\">Know about Asia</a>\\n          </div>\\n\\n        </div>\\n\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-region',\n  templateUrl: './region.component.html',\n  styleUrls: ['./region.component.css']\n})\nexport class RegionComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}